apiVersion: v1
kind: Namespace
metadata:
  name: stage1-newdevtest
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stage1-newdevtest-app
  namespace: stage1-newdevtest
  labels:
    app: frontend
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      nodeSelector:
        eks.amazonaws.com/nodegroup: preprod-private
      containers:
      - name: frontend
        image: sathish8329/kovaionplay:1891
        ports:
        - containerPort: 8081
        # Extended startup probe configuration
        startupProbe:
          tcpSocket:     # Use TCP socket check instead of HTTP
            port: 8081
          initialDelaySeconds: 30
          timeoutSeconds: 15
          periodSeconds: 20
          failureThreshold: 15  # Allow up to 5 minutes (15 * 20s) for startup
        # Only enable readiness and liveness probes after startup succeeds
        readinessProbe:
          httpGet:
            path: /
            port: 8081
          timeoutSeconds: 15
          periodSeconds: 20
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          tcpSocket:     # Use TCP socket check for liveness
            port: 8081
          timeoutSeconds: 15
          periodSeconds: 30
          failureThreshold: 3
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m 
            memory: 1Gi
        imagePullPolicy: Always
---

apiVersion: v1
kind: Service
metadata:
  name: stage1-newdevtest-frontend-service
  namespace: stage1-newdevtest
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80          # External port exposed for the service
      targetPort: 8081   # Matches the container port in the deployment
  type: NodePort        # Optional: Depending on your needs, you may choose ClusterIP or LoadBalancer instead
